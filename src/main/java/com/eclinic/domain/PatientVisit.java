package com.eclinic.domain;
// Generated Jul 7, 2016 1:08:16 PM by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * PatientVisit generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "patient_visit", catalog = "eclinic")
public class PatientVisit implements Serializable {

	private long id;
	private Doctor doctor;
	private Patient patient;
	private String date;
	private Set<PatientDisease> patientDiseases = new HashSet<PatientDisease>(0);
	private Set<Prescription> prescriptions = new HashSet<Prescription>(0);
	
	public PatientVisit() {
	}

	public PatientVisit(Doctor doctor, Patient patient, String date) {
		this.doctor = doctor;
		this.patient = patient;
		this.date = date;
	}
	
	@Id
	@Column(name = "id", unique = true, nullable = false)
	@GeneratedValue(strategy = GenerationType.AUTO)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "doctor_id", nullable = false)
	public Doctor getDoctor() {
		return this.doctor;
	}

	public void setDoctor(Doctor doctor) {
		this.doctor = doctor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patient_id", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Column(name = "date", length = 45)
	public String getDate() {
		return this.date;
	}

	public void setDate(String date) {
		this.date = date;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientVisit")
	public Set<PatientDisease> getPatientDiseases() {
		return this.patientDiseases;
	}

	public void setPatientDiseases(Set<PatientDisease> patientDiseases) {
		this.patientDiseases = patientDiseases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patientVisit")
	public Set<Prescription> getPrescriptions() {
		return this.prescriptions;
	}

	public void setPrescriptions(Set<Prescription> prescriptions) {
		this.prescriptions = prescriptions;
	}

	@Override
	public String toString() {
		return "PatientVisit [id=" + id + ", doctor=" + doctor + ", patient=" + patient + ", date=" + date
				+ ", patientDiseases=" + patientDiseases + ", prescriptions=" + prescriptions + "]";
	}

}
